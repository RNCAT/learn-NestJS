generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement()) @map("user_id")
  email      String     @unique @db.VarChar(50)
  password   String     @db.Text
  firstname  String?    @db.VarChar(30)
  lastname   String?    @db.VarChar(30)
  phone      String?    @db.VarChar(10)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  userTypeId Int        @map("user_type_id")
  UserType   UserType   @relation(fields: [userTypeId], references: [id])
  Adoption   Adoption[]

  @@map("users")
}

model UserType {
  id        Int      @id @default(autoincrement()) @map("user_type_id")
  name      String   @unique @db.VarChar(20)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User[]

  @@map("user_types")
}

model Pet {
  id Int @id @default(autoincrement()) @map("pet_id")

  name        String     @db.VarChar(20)
  age         Int        @db.SmallInt
  typeId      Int        @map("type_id")
  statusId    Int        @map("status_id")
  description String?    @db.Text
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  type        Type       @relation(fields: [typeId], references: [id], onUpdate: Cascade, onDelete: Restrict)
  status      Status     @relation(fields: [statusId], references: [id], onUpdate: Cascade, onDelete: Restrict)
  Adoption    Adoption[]

  @@map("pets")
}

model Type {
  id        Int      @id @default(autoincrement()) @map("type_id")
  name      String   @unique @db.VarChar(20)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Pet       Pet[]

  @@map("types")
}

model Status {
  id        Int      @id @default(autoincrement()) @map("status_id")
  name      String   @unique @db.VarChar(20)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Pet Pet[]
  @@map("statuses")
}

model Adoption {
  id        Int      @id @default(autoincrement()) @map("adoption_id")
  petId     Int      @map("pet_id")
  userId    Int      @map("user_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  pet       Pet      @relation(fields: [petId], references: [id], onUpdate: Cascade, onDelete: Restrict)
  user      User     @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Restrict)

  @@map("adoptions")
}
